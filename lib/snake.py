# Самая простая функция
#   принимает первым параметром элементы змейки
#   принимает вторым парамтером текущую длину змейки
#
# Если количество элементов змейки больше указанной,
#   возвращает только первые size элементов
#   в противном случае возвращает весь trail целиком
#
def limit(trail, size):
    pass

# Функция принимает массив координат тела змеи,
#   например [[1, 2], [1, 3], [1, 4]] - параметр trail
# Считается, что голова змеи находится в 0-м элементе списка
#
# Второй параметр функции (side) - направление, в котором двигается
#   змея
# Нужно дополнить змею ещё одной клеткой, исходящей из «головы»
#   и следующей за ней в направлении, указанном параметром side
#
# Необходимо использовать (и, возможно, модифицировать)
#   функцию move
def grow(trail, side):
    new = move(trail[0],side)
    trail.insert(0, new)
    return(trail)

# Функция принимает первым параметром - head
#   список из двух чисел вида [x, y]
#   где x - координата по горизонтали
#     а y - координата по вертикали
# вторым параметром - строку 'L', 'R', 'D', 'U'
#
#   L соответствует движению влево
#   R соответствует движению вправо
#   D соответствует движению вниз
#   U соответствует движению вверх
#
# и должна возвращать список вида [x, y],
# в которую должна передвинуться голова змеи
# после движения по указанному направлению
#
def move(head, side):
    [x, y] = head
    if side == 'L':
        x -= 1
    elif side == 'R':
        x += 1
    elif side == 'U':
        y -= 1
    elif side == 'D':
        y += 1
    return([x, y])

